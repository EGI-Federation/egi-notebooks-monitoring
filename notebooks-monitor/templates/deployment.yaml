---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: monitor
  labels:
    app: hubmonitor
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: hubmonitor
      release: {{ .Release.Name }}
  template:
    metadata:
      labels:
        name: monitor
        app: hubmonitor
        release: {{ .Release.Name }}
        heritage: {{ .Release.Service }}
    spec:
      containers:
        - name: ui
          image: "{{ .Values.monitor.ui.image.name }}:{{ .Values.monitor.ui.image.tag }}"
          imagePullPolicy: {{ .Values.monitor.ui.image.pullPolicy }}
          env:
            - name: JUPYTERHUB_SERVICE_PREFIX
              value: "/services/status"
            - name: STATUS_FILE
              value: /shared/status.json
          volumeMounts:
            - name: shared-data
              mountPath: /shared
          ports:
            - name: http
              containerPort: 80
              protocol: TCP
          resources:
{{ toYaml .Values.monitor.ui.resources | indent 12 }}
        - name: worker
          image: "{{ .Values.monitor.worker.image.name }}:{{ .Values.monitor.worker.image.tag }}"
          imagePullPolicy: {{ .Values.monitor.worker.image.pullPolicy }}
          env:
            - name: JUPYTERHUB_API_URL
              value: "http://hub.{{ $.Release.Namespace }}.svc.cluster.local:8081/hub/api"
            # this is a secret...
            - name: JUPYTERHUB_API_TOKEN
              valueFrom:
                secretKeyRef:
                  # TODO: This shouldn't be hardcoded, but we do not have the
                  # template from the JH helm chart right now
                  # so we should instead of using the current approach
                  # do extend that themplate
                  name: hub
                  key: hub.services.status.apiToken
            - name: JUPYTERHUB_USER
              value: "{{ .Values.hub.services.status.user }}"
              value: monitor
            - name: STATUS_FILE
              value: /shared/status.json
            - name: SPAWN_TIMEOUT
              value: "{{ .Values.monitor.worker.timeout }}"
            {{- if .Values.monitor.worker.debug }}
            - name: DEBUG
              value: "TRUE"
            {{- end }}
          volumeMounts:
            - name: shared-data
              mountPath: /shared
          resources:
{{ toYaml .Values.monitor.worker.resources | indent 12 }}
      volumes:
        - name: shared-data
          emptyDir: {}
