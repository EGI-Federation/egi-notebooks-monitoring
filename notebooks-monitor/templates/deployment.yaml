---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: monitor
  namespace: "{{ .Release.Namespace }}"
  labels:
    app: hubmonitor
    release: "{{ .Release.Name }}"
    heritage: "{{ .Release.Service }}"
spec:
  replicas: 1
  selector:
    matchLabels:
      app: hubmonitor
      release: "{{ .Release.Name }}"
  template:
    metadata:
      labels:
        name: monitor
        app: hubmonitor
        release: "{{ .Release.Name }}"
        heritage: "{{ .Release.Service }}"
        hub.jupyter.org/network-access-hub: "true"
    spec:
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        seccompProfile:
          type: RuntimeDefault
      containers:
        - name: ui
          image: "{{ .Values.monitor.ui.image.name }}:{{ .Values.monitor.ui.image.tag }}"
          imagePullPolicy: "{{ .Values.monitor.ui.image.pullPolicy }}"
          env:
            - name: JUPYTERHUB_SERVICE_PREFIX
              value: '{{ .Values.hub.baseUrl | trimSuffix "/" }}/services/{{ .Values.monitor.serviceName }}'
            - name: STATUS_FILE
              value: /shared/status.json
          volumeMounts:
            - name: shared-data
              mountPath: /shared
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
          securityContext:
            capabilities:
              drop:
                - ALL
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
          {{- with .Values.monitor.ui.resources }}
          resources:
            {{- . | toYaml | nindent 12 }}
          {{- end }}
        - name: worker
          image: "{{ .Values.monitor.worker.image.name }}:{{ .Values.monitor.worker.image.tag }}"
          imagePullPolicy: {{ .Values.monitor.worker.image.pullPolicy }}
          env:
            - name: SERVICE_TYPE
              value: "{{ .Values.monitor.worker.serviceType }}"
            - name: STATUS_FILE
              value: /shared/status.json
{{- if eq .Values.monitor.worker.serviceType "jupyterhub" }}
            - name: MONITORED_URL
              value: "http://hub:8081/hub/api"
            - name: JUPYTERHUB_API_TOKEN
              valueFrom:
                secretKeyRef:
                  name: hub
                  key: hub.services.{{ .Values.monitor.serviceName }}.apiToken
            - name: JUPYTERHUB_USER
              value: "{{ .Values.hub.services.status.user }}"
            - name: SPAWN_TIMEOUT
              value: "{{ .Values.monitor.worker.timeout }}"
{{- else }}
            - name: MONITORED_URL
              value: "http://binder/"
{{- end }}
{{- if .Values.monitor.worker.debug }}
            - name: DEBUG
              value: "TRUE"
{{- end }}
          securityContext:
            capabilities:
              drop:
                - ALL
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
          volumeMounts:
            - name: shared-data
              mountPath: /shared
          {{- with .Values.monitor.worker.resources }}
          resources:
            {{- . | toYaml | nindent 12 }}
          {{- end }}
      volumes:
        - name: shared-data
          emptyDir: {}
