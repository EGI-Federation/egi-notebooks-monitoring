---
name: Create helm chart

on:
  push:
    # only pushes on master so we don't push intermediate results
    branches:
      - master
      # also when tagging so we get nice versioning
    tags:
      - "*"
  pull_request:

permissions: { }

jobs:
  chart:
    name: Create chart
    runs-on: ubuntu-latest

    steps:
      - name: check out
        uses: actions/checkout@v5
        with:
          fetch-depth: 0
          persist-credentials: false
      - name: Set up python
        uses: actions/setup-python@v6
      - name: Install requirements
        run: |
          pip install -r dev-requirements.txt
      - name: Install Helm
        uses: azure/setup-helm@1a275c3b69536ee54be43f2070a358922e12c8d4
        with:
          version: v3.19.0
      - name: Build chart
        run: |
          chartpress
      - name: Login to image registry
        uses: docker/login-action@5e57cd118135c172c3672efd75eb46360885c0ef
        with:
          registry: ${{ vars.REGISTRY_SERVER }}
          username: ${{ vars.REGISTRY_USERNAME }}
          password: ${{ secrets.REGISTRY_TOKEN }}
        if: github.event_name != 'pull_request'
      - name: Login to chart registry
        run: |
          echo "${{ secrets.REGISTRY_TOKEN }}" | helm registry login --username "${VARS_REGISTRY_USERNAME}" --password-stdin "${VARS_REGISTRY_SERVER}"
        if: github.event_name != 'pull_request'
        env:
          VARS_REGISTRY_USERNAME: ${{ vars.REGISTRY_USERNAME }}
          VARS_REGISTRY_SERVER: ${{ vars.REGISTRY_SERVER }}
      - name: Push chart
        run: |
          git config --global user.name "egibot"
          git config --global user.email "egibot@egi.eu"
          # update version, build image, push image
          chartpress --push
          helm package notebooks-monitor
          f="$(find . -maxdepth 1 -name notebooks-monitor-\*.tgz | head -n 1)"
          helm push "$f" "oci://${VARS_REGISTRY_SERVER}/${VARS_REGISTRY_CHART_PROJECT}"
        if: github.event_name != 'pull_request'
        env:
          VARS_REGISTRY_SERVER: ${{ vars.REGISTRY_SERVER }}
          VARS_REGISTRY_CHART_PROJECT: ${{ vars.REGISTRY_CHART_PROJECT }}
